-- File: random.vhd
-- Generated by MyHDL 0.8
-- Date: Tue Jun 18 00:13:52 2013


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_08.all;

entity random is
    port (
        select_clk: in std_logic;
        fast_clk: in std_logic;
        old: inout unsigned(2 downto 0);
        new: out unsigned(2 downto 0)
    );
end entity random;


architecture MyHDL of random is





signal count: unsigned(2 downto 0);

begin




RANDOM_COUNTING: process (fast_clk) is
begin
    if rising_edge(fast_clk) then
        if (count /= 4) then
            count <= (count + 1);
        else
            count <= to_unsigned(0, 3);
        end if;
    end if;
end process RANDOM_COUNTING;


RANDOM_SHOWING: process (select_clk) is
begin
    if rising_edge(select_clk) then
        if (old = count) then
            new <= ((count + 1) mod 5);
            old <= ((count + 1) mod 5);
        else
            new <= count;
            old <= count;
        end if;
    end if;
end process RANDOM_SHOWING;

end architecture MyHDL;
